% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_weibull.R
\name{fit_weibull}
\alias{fit_weibull}
\title{Fit a Weibull psychometric function generalized mixed-effects model}
\usage{
fit_weibull(
  y,
  x,
  thresholdForm = scaleLogisThreshold ~ 1,
  shapeForm = logShape ~ 1,
  dat,
  xIntercept = 0.5,
  rhAsymptote = 0.99,
  range_x = "auto",
  ...
)
}
\arguments{
\item{y}{The binary variable to be predicted. It should change as a monotonic function of \code{x}.}

\item{x}{Positive-bounded variable used as the "x-axis" of the psychometric function}

\item{thresholdForm}{A formula, either a linear model or linear mixed-effects model, specifying the predicted values of \code{scaleLogisThreshold}. This is the scaled inverse-logit-transformed threshold, which provides more stable estimation than sampling the distributions of the raw threshold.}

\item{shapeForm}{A formula, either a linear model or linear mixed-effects model, specifying the predicted values of \code{logShape}. This is the log-transformed shape, which provides more stable estimation than sampling the distributions of the raw shape.}

\item{dat}{Data frame with variables with which to fit the model.}

\item{xIntercept}{Scalar number: What should the value of the Weibull function be when \code{x} is zero?}

\item{rhAsymptote}{Scalar number: What should the value of the Weibull function be when \code{x} is infinite?}

\item{range_x}{Two numbers (e.g., \code{c(.1,5)}). Defines the plausible range of \code{threshold} values, which act to limit the possible values of the threshold. Defaults to the \code{min} and \code{max} of \code{x}, but if the user wants their threshold to have different boundaries, they can be user-specified.}

\item{...}{}
}
\description{
Fit a model to binary response data, where the link between positively-bounded \code{x}
and the binary \code{y} is a Weibull function. The Weibull function is defined
with \code{threshold} and \code{shape} parameters, which correspond broadly to
a "location" and "slope."
}
\details{
This function serves to set up a nonlinear \code{\link[brms]{brm}} model with a 
bernoulli response distribution.
}
\examples{

    
    d <- TEfits::anstrain
    d$absRat <- abs(d$ratio)
    
    threshSpline <- bSplineFormula(scaleLogisThreshold ~ trialNum
                                   ,d$trialNum,groupingVar = 'subID')
                                   
    m_weibull <- fit_weibull(y='acc',x='absRat'
                                   ,shapeForm = logShape ~ (1 | subID)
                                   cores = 2
                                   )

}
