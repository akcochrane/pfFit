% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_logistic.R
\name{fit_logistic}
\alias{fit_logistic}
\title{Fit a logistic psychometric function generalized mixed-effects model}
\usage{
fit_logistic(
  y,
  x,
  thresholdForm = scaleLogisThreshold ~ 1,
  biasForm = bias ~ 1,
  dat,
  lapseRate = 0.01,
  range_x = "auto",
  ...
)
}
\arguments{
\item{y}{The binary variable to be predicted. It should change as a monotonic function of \code{x}.}

\item{x}{Numeric variable used as the "x-axis" of the psychometric function}

\item{thresholdForm}{A formula, either a linear model or linear mixed-effects model, specifying the predicted values of \code{scaleLogisThreshold}. This is the scaled inverse-logit-transformed threshold, which provides more stable estimation than sampling the distributions of the raw threshold.}

\item{biasForm}{A formula, either a linear model or linear mixed-effects model, specifying the predicted values of \code{bias}.}

\item{dat}{Data frame with variables with which to fit the model.}

\item{lapseRate}{The value the logistic function takes at \code{x} values of \code{-Inf}, with the values approaching \code{1-lapseRate} as \code{x} approaches \code{Inf}.}

\item{range_x}{Two numbers (e.g., \code{c(.1,5)}). Defines the plausible range of \code{threshold} values, which act to limit the possible values of the threshold. Defaults to the \code{min} and \code{max} of \code{abs(x)}, but if the user wants their threshold to have different boundaries, they can be user-specified.}

\item{...}{}
}
\description{
Fit a model to binary response data, where the link between positively-bounded \code{x}
and the binary \code{y} is a logistic function. The logistic function is defined
with \code{threshold} and \code{bias} parameters, which correspond broadly to
a "slope" and "location" respectively.
}
\details{
This function serves to set up a nonlinear \code{\link[brms]{brm}} model with a 
bernoulli response distribution.
}
\examples{

  d <- TEfits::anstrain
  d$absRat <- abs(d$ratio)
  
  threshSpline <- bSplineFormula(scaleLogisThreshold ~ trialNum
  ,d$trialNum,groupingVar = 'subID')
  
  m_logistic <- fit_logistic(y='resp',x='ratio'
  ,thresholdForm = threshSpline
  ,bias = bias ~ (1 | subID)
  ,dat = d
   )

}
